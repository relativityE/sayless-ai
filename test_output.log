
> sayless-ai@0.0.0 test
> vitest src/__tests__/useSpeechRecognition.test.jsx


 RUN  v3.2.4 /app

stdout | src/__tests__/useSpeechRecognition.test.jsx
--- useSpeechRecognition.js module loaded ---


<--- Last few GCs --->

[23558:0x6a42000]    59154 ms: Mark-Compact (reduce) 2046.6 (2082.6) -> 2046.2 (2083.1) MB, pooled: 0 MB, 599.09 / 0.00 ms  (+ 637.8 ms in 0 steps since start of marking, biggest step 0.0 ms, walltime since start of marking 1729 ms) (average mu = 0.414, c[23558:0x6a42000]    60943 ms: Mark-Compact (reduce) 2047.2 (2083.1) -> 2046.5 (2083.6) MB, pooled: 0 MB, 1394.82 / 0.00 ms  (+ 63.0 ms in 0 steps since start of marking, biggest step 0.0 ms, walltime since start of marking 1541 ms) (average mu = 0.309, c

<--- JS stacktrace --->

FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
----- Native stack trace -----

 1: 0xe16044 node::OOMErrorHandler(char const*, v8::OOMDetails const&) [node (vitest 1)]
 2: 0x11e0dd0 v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, v8::OOMDetails const&) [node (vitest 1)]
 3: 0x11e10a7 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, v8::OOMDetails const&) [node (vitest 1)]
 4: 0x140e985  [node (vitest 1)]
 5: 0x1428219 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) [node (vitest 1)]
 6: 0x13fc8c8 v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath(int, v8::internal::AllocationType, v8::internal::AllocationOrigin, v8::internal::AllocationAlignment) [node (vitest 1)]
 7: 0x13fd7f5 v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath(int, v8::internal::AllocationType, v8::internal::AllocationOrigin, v8::internal::AllocationAlignment) [node (vitest 1)]
 8: 0x13d64ce v8::internal::Factory::NewFillerObject(int, v8::internal::AllocationAlignment, v8::internal::AllocationType, v8::internal::AllocationOrigin) [node (vitest 1)]
 9: 0x1837aec v8::internal::Runtime_AllocateInYoungGeneration(int, unsigned long*, v8::internal::Isolate*) [node (vitest 1)]
10: 0x7f4babcac7c9

⎯⎯⎯⎯ Unhandled Rejection ⎯⎯⎯⎯⎯
Error: Channel closed
 ❯ target.send node:internal/child_process:753:16
 ❯ ProcessWorker.send node_modules/tinypool/dist/index.js:140:41
 ❯ MessagePort.<anonymous> node_modules/tinypool/dist/index.js:149:62
 ❯ [nodejs.internal.kHybridDispatch] node:internal/event_target:827:20
 ❯ MessagePort.<anonymous> node:internal/per_context/messageport:23:28

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: 'ERR_IPC_CHANNEL_CLOSED' }
